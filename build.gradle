buildscript {
    ext.buildConfig = [
            'compileSdk': 'android-P',
            'minSdk': 21,
            'targetSdk': 27,

            'version': [
                    'major': 0,
                    'minor': 1,
                    'patch': 6,
                    'build': 0,
            ],
    ]
    ext.buildConfig.version['name'] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"
    ext.buildConfig.version['code'] = buildConfig.version.major * 1000000 + buildConfig.version.minor * 10000 + buildConfig.version.patch * 100 + buildConfig.version.build

    ext.versions = [
            'kotlin': '1.2.41',
            'androidX': '1.0.0-alpha1',
            'supportLibrary': '27.1.1',
            'atsl': '1.1.0-alpha3',
            'okhttp': '3.10.0',
            'retrofit': '2.4.0',
            'dagger': '2.16',
            'room': '2.0.0-alpha1',
    ]

    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0-alpha15'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath 'com.google.gms:google-services:3.2.1'
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

// Force all of the primary support libraries to use the same version.
configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            if (details.requested.group == 'com.android.support') {
                details.useVersion versions.supportLibrary
            }
        }
    }
}

@SuppressWarnings("GroovyUnusedDeclaration")
def propOrEmpty(String name) {
    return hasProperty(name) ? getProperty(name) : ''
}