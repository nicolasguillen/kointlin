apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.nicolasguillen.kointlin"

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        testInstrumentationRunner "com.nicolasguillen.kointlin.mocks.MockTestRunner"

        vectorDrawables.useSupportLibrary = true

        buildConfigField 'String', 'BUGSNAG_API_KEY', "\"${propOrEmpty('KOINTLIN_BUGSNAG_API_KEY')}\""

    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        lintConfig rootProject.file('lint.xml')

        // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
        checkReleaseBuilds false
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'kointlin'
            keyAlias 'kointlin'
            keyPassword 'kointlin'
        }
        if (file('kointlin.keystore').exists()) {
            upload {
                storeFile file('kointlin.keystore')
                storePassword propOrEmpty('KOINTLIN_UPLOAD_STORE_PASSWORD')
                keyAlias 'kointlin'
                keyPassword propOrEmpty('KOINTLIN_UPLOAD_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            if (file('kointlin.keystore').exists()) {
                signingConfig signingConfigs.upload
            } else {
                signingConfig signingConfigs.debug
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles(
                    file('src/main/proguard-android.pro'),
                    file('src/main/proguard-app.pro')
            )
        }
    }

    kapt {
        generateStubs = true
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation deps.kotlin.stdlib.jdk

    implementation deps.android.support.appCompat
    implementation deps.android.support.design
    implementation deps.android.support.recyclerView
    implementation deps.android.support.cardView
    implementation deps.android.support.annotations
    implementation deps.android.support.constraintLayout

    implementation deps.android.x.coreKtx

    implementation deps.rx.java
    implementation deps.rx.android
    implementation deps.rx.kotlin
    implementation deps.rx.binding

    implementation deps.retrofit.client
    implementation deps.retrofit.adapter
    implementation deps.retrofit.converterGson
    implementation deps.retrofit.converterXml

    implementation deps.okhttp.client
    implementation deps.okhttp.logging

    implementation deps.bugsnag

    implementation deps.picasso

    implementation deps.dagger.runtime
    annotationProcessor deps.dagger.compiler
    kapt deps.dagger.compiler

    implementation deps.android.arch.roomRuntime
    implementation deps.android.arch.roomRx
    kapt deps.android.arch.compiler

    testImplementation deps.junit
    testImplementation deps.mockito
    testImplementation deps.android.test.runner
    testImplementation deps.android.test.rules

    androidTestImplementation deps.screengrab
}